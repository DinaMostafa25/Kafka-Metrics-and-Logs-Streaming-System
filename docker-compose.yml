
services:
    zookeeper:
        image: confluentinc/cp-zookeeper:7.3.0
        container_name: zookeeper
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000
        ports:
            - "2181:2181"
        networks:
            - kafka-network

    kafka:
        image: confluentinc/cp-kafka:7.3.0
        container_name: kafka
        depends_on:
            - zookeeper
        ports: 
            - "9092:9092"
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
            KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
            KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
        networks:
            - kafka-network
    kafka-cli:
        image: confluentinc/cp-kafka:7.3.0
        container_name: kafka_cli
        depends_on:
            - kafka
        networks:
            - kafka-network
        tty: true
        stdin_open: true
        entrypoint: /bin/sh

    postgres:
        image: postgres:15
        container_name: postgres
        restart: always
        ports:
            - "5432:5432"
        environment:
            POSTGRES_USER: kafkauser
            POSTGRES_PASSWORD: kafkapassword
            POSTGRES_DB: kafkadb
        volumes:
            - pgdata:/var/lib/postgresql/data
        networks:
            - kafka-network
    kafka-java-client:
        build: .
        container_name: kafka-java-client
        depends_on:
        - kafka
        networks:
        - kafka-network
        tty: true
        stdin_open: true
        entrypoint: /bin/sh

networks:
  kafka-network:
    driver: bridge
   

volumes:
  pgdata:

